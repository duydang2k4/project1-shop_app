CREATE DATABASE ShopApp;

CREATE TABLE USERS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    FULLNAME VARCHAR(100) DEFAULT '',
    PHONE_NUMBER VARCHAR(10) NOT NULL,
    ADDRESS VARCHAR(200) DEFAULT '',
    PASSWORD VARCHAR(100) NOT NULL DEFAULT'',
    CREATED_AT DATETIME,
    UPDATED_AT DATETIME,
    IS_ACTIVE TINYINT(1) DEFAULT 1,
    DATE_OF_BIRTH DATE,
    FACEBOOK_ACCOUNT_ID INT DEFAULT 0,
    GOOGLE_ACCOUNT_ID INT DEFAULT 0
    ROLE_ID INT,
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID)
);

CREATE TABLE ROLES(
    ID INT PRIMARY KEY,
    NAME VARCHAR(20) NOT NULL
);

CREATE TABLE TOKENS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    TOKEN VARCHAR(255) UNIQUE NOT NULL,
    TOKEN_TYPE VARCHAR(50) NOT NULL,
    EXPIRATION_DATE DATETIME,
    REVOKED TINYINT(1) NOT NULL,
    EXOIRED TINYINT(1) NOT NULL,
    USER_ID INT,
    FOREIGN KEY(USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE SOCIAL_ACCOUNTS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    PROVIDER VARCHAR(20) NOT NULL COMMENT 'Tên nhà social',
    PROVIDER_ID VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(150) NOT NULL COMMENT 'Email tài khoản',
    NAME VARCHAR(100) NOT NULL COMMENT 'Tên người dùng',
    USER_ID INT,
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE CATEGORIES(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL DEFAULT '' COMMENT'Tên môn học'
);

CREATE TABLE PRODUCTS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(350) COMMENT 'Tên khoá học',
    PRICE FLOAT NOT NULL CHECK(PRICE >= 0),
    THUMBNAIL VARCHAR(300) DEFAULT'',
    DESCRIPTION LONGTEXT DEFAULT '',
    CREATED_AT TIMESTAMP,
    UPDATED_AT TIMESTAMP,
    CATEGORY_ID INT,
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(ID)
);

CREATE TABLE ORDERS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_ID INT,
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    FULLNAME VARCHAR(100) DEFAULT'',
    EMAIL VARCHAR(100) DEFAULT'',
    PHONE_NUMBER VARCHAR(20) NOT NULL,
    ORDER_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR(20) ENUM('Succeeded', 'Failed', 'Cancelled'),
    TOTAL_MONEY FLOAT CHECK (TOTAL_MONEY >=0),
    PAYMENT_METHOD VARCHAR(100),
    ACTIVE TINYINT(1)
);

CREATE TABLE ORDER_DETAILS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ORDER_ID INT,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ID),
    COURSE_ID INT,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES (ID),
    PRICE FLOAT CHECK(PRICE >= 0),
    NUMBER_OF_COURSES INT CHECK (NUMBER_OF_COURSES > 0),
    TOTAL_MONEY FLOAT CHECK (TOTAL_MONEY >= 0),
);

